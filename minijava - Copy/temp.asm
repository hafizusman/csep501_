; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\eclipse\csep501_\minijava\temp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?set@My@@QAEXH@Z				; My::set
PUBLIC	?get@My@@QAEHXZ					; My::get
PUBLIC	?setT@Their@@QAEXH@Z				; Their::setT
PUBLIC	?getT@Their@@QAEHXZ				; Their::getT
PUBLIC	_main
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_memset:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_y$ = -40						; size = 4
_x$ = -36						; size = 4
_t$ = -32						; size = 4
_m$ = -28						; size = 4
tv74 = -24						; size = 4
$T1 = -20						; size = 4
tv67 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
$T4 = -4						; size = 4
_main	PROC
; File c:\eclipse\csep501_\minijava\temp.cpp
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 23
	mov	DWORD PTR $T2[ebp], 8
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@main
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@main
$LN3@main:
	mov	DWORD PTR tv67[ebp], 0
$LN4@main:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _m$[ebp], ecx
; Line 24
	mov	DWORD PTR $T1[ebp], 16			; 00000010H
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@main
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN6@main
$LN5@main:
	mov	DWORD PTR tv74[ebp], 0
$LN6@main:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 25
	push	4
	mov	ecx, DWORD PTR _m$[ebp]
	call	?set@My@@QAEXH@Z			; My::set
; Line 26
	mov	ecx, DWORD PTR _m$[ebp]
	call	?get@My@@QAEHXZ				; My::get
	mov	DWORD PTR _x$[ebp], eax
; Line 28
	push	3
	mov	ecx, DWORD PTR _t$[ebp]
	call	?setT@Their@@QAEXH@Z			; Their::setT
; Line 29
	mov	ecx, DWORD PTR _t$[ebp]
	call	?getT@Their@@QAEHXZ			; Their::getT
	mov	DWORD PTR _y$[ebp], eax
; Line 30
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getT@Their@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getT@Their@@QAEHXZ PROC				; Their::getT, COMDAT
; _this$ = ecx
; File c:\eclipse\csep501_\minijava\temp.cpp
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?getT@Their@@QAEHXZ ENDP				; Their::getT
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setT@Their@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?setT@Their@@QAEXH@Z PROC				; Their::setT, COMDAT
; _this$ = ecx
; File c:\eclipse\csep501_\minijava\temp.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN2@setT:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN3@setT
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN2@setT
$LN3@setT:
	mov	esp, ebp
	pop	ebp
	ret	4
?setT@Their@@QAEXH@Z ENDP				; Their::setT
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get@My@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@My@@QAEHXZ PROC					; My::get, COMDAT
; _this$ = ecx
; File c:\eclipse\csep501_\minijava\temp.cpp
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?get@My@@QAEHXZ ENDP					; My::get
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?set@My@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?set@My@@QAEXH@Z PROC					; My::set, COMDAT
; _this$ = ecx
; File c:\eclipse\csep501_\minijava\temp.cpp
; Line 6
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?set@My@@QAEXH@Z ENDP					; My::set
_TEXT	ENDS
END
