package AST.Visitor;

import java.io.FileWriter;

/**
 * Created by Muhammad on 6/7/2014.
 */
public class CGHelper {
    private static final String m_fileName = "blah.asm";
    private static FileWriter f = null;
    private static boolean init = false;

    public void initWriter()
    {
        try {
            f = new FileWriter(m_fileName);
            init = true;
        }
        catch(Exception e)
        {
            System.out.println("ERROR: failed to create file: " + m_fileName.toString());
        }

    }

    public void gen(String s)
    {
        System.out.print(s);
        if (init) {
            try {
                f.write(s);
                f.flush();
            }
            catch (Exception e) {
                System.out.println("ERROR: failed to write file: " + m_fileName.toString());
            }
        }
    }
    private void genTitle(String s)
    {
        gen("TITLE\t" + s.toString());
        gen("\n");
    }

    public void genCommentLine(String s)
    {
        gen("; " + s.toString());
        gen("\n");
    }

    public void genAsmPreamble()
    {
        genCommentLine("Listing generated by MuhammadUsman Non-optimizing Compiler Version <>");
        gen("\n");
        genTitle(m_fileName);
        gen("\n");
        gen(
            "\t.686P \n" +
            "\t.XMM  \n" +
            "\tinclude listing.inc \n" +
            "\t.model	flat \n" +
            "\n" +
            "INCLUDELIB LIBCMT \n" +
            "INCLUDELIB OLDNAMES \n" +
            "\n" +
            "PUBLIC	_asm_main \n" +
            "EXTRN	_put:PROC \n" +
            "EXTRN	_get:PROC \n" +
            "EXTRN  _mjmalloc:PROC \n" +
            "\n" +
            "_TEXT	SEGMENT \n" +
            "_argc$ = 8                       ; size = 4 \n" +
            "_argv$ = 12                      ; size = 4 \n" +
            "\n"
        );
    }

    public void genAsmPostamble()
    {
        gen(
            "_TEXT	ENDS \n" +
            "END \n"
        );
    }
}
